syntax = "proto3";

package c2c;
import "google/protobuf/timestamp.proto";
//import "google/protobuf/wrappers.proto";


service C2C{
  // C2C RPCs
  //

  // Health
  rpc Ping(PingRequest) returns (PingResponse) {}

  // UserType
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  // Projects
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {} // C2C-49
  // rpc GetProjectStatus(ProjectRequest) returns (GetProjectStatusResponse) {} // C2C-51

  // ProjectType Runs
  // rpc GetProjectRun(stream ProjectRunRequest) returns (stream GetProjectRunResponse) {} // C2C-42, C2C-43
  // rpc CreateProjectRun(stream CreateProjectRunRequest) returns (stream CreateProjectRunResponse) {}

  // Models
  // rpc GetModelContact(ModelRunRequest) returns (GetModelContactResponse) {} // C2C-28
  rpc CreateModel(CreateModelRequest) returns (CreateModelResponse) {}

  // Datasets
  rpc CreateDataset(CreateDatasetRequest) returns (CreateDatasetResponse) {} // C2C-29, C2C-30, C2C-31
  // rpc GetDataset(stream GetDatasetRequest) returns (stream GetDatasetResponse) {} // C2C-35, C2C-36, C2C-37
  // rpc GetDatasetLineage(stream GetDatasetRequest) returns (stream GetDatasetLineageResponse) {} // C2C-39, C2C-40
  // rpc ModifyDataset(stream ModifyDatasetRequest) returns (stream ModifyDatasetResponse) {} // C2C-33
}


// Health Ping
message PingRequest {
  string who_i_am = 1;
}

message PingResponse {
  google.protobuf.Timestamp response_date = 1;
  bool is_happy = 2;
}


// Common Types
message RunScheduleType {
  string start = 1;
  string end = 2;
}


// User Related
message UserType {
  string username = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
}

message CreateUserRequest {
  UserType user = 1;
}

message CreateUserResponse {
  string created = 1;
  string vertex_id = 2;
  string username = 3;
}


// Project Related
message ProjectScenarioType {
  string name = 1;
  string description = 2;
}

message ProjectSensitivityType {
  string name = 1;
  string description = 2;
}

message ProjectRunType{
  string name = 1;
  string description = 2;
  repeated string scenarios = 3;
  RunScheduleType schedule = 4;
  // TODO: Refactor requirements
  string requirements = 5;
  repeated ModelRunType model_runs = 6;
  repeated ModelRunEdgeType topology = 7;
}

message ProjectType {
  string name = 1;
  string full_name = 2;
  UserType owner = 3;
  repeated string assumptions = 4;
  // TODO: Refactor requirements
  string requirements = 5;
  repeated ProjectScenarioType scenarios = 6;
  repeated ProjectSensitivityType sensitivities = 7;
  RunScheduleType schedule = 8;
  repeated ProjectRunType project_runs = 9;
}

message GetProjectRequest {
  oneof project_identifier {
    string project_name = 1;
    string project_vertex_id = 2;
  }
}

message CreateProjectRequest {
  ProjectType project = 1;
}

message CreateProjectResponse {
  string created = 1;
  string vertex_id = 2;
  string project_name = 3;
}

message GetProjectRunRequest {
  oneof project_identifier {
    string project_name = 1;
    string project_vertex_id = 2;
  }
  oneof project_run_identifier {
    string project_run_name = 3;
    string project_run_vertex_id = 4;
  }
}

message GetProjectStatusResponse {
}

// Model Related
message ScenarioMappingType {
  string model_scenario = 1;
  repeated string project_scenarios = 2;
  string description = 3;
}

message ModelType {
  string name = 1;
  repeated UserType team = 2;
  repeated string expected_scenarios = 3;
  // TODO: Refactor requirements
  string requirements = 4;
  repeated ScenarioMappingType scenario_mapping = 5;
}

message ModelRunType {
  string model = 1;
  string config_source = 2;
  string version = 3;
  // TODO: Refactor requirements
  string requirements = 4;
  RunScheduleType schedule = 5;
}

message ModelRunEdgeType {
  string from_model = 1;
  string to_model = 2;
  string description = 3;
  RunScheduleType schedule = 5;
}

message CreateModelRequest {
  ModelType model = 1;
}

message CreateModelResponse {
  string created = 1;
  string vertex_id = 2;
  string model_name = 3;
}

message CreateModelRunRequest {
  oneof project_identifier {
    string project_name = 1;
    string project_vertex_id = 2;
  }
  oneof project_run_identifier {
    string project_run_name = 3;
    string project_run_vertex_id = 4;
  }
  oneof model_run_identifier {
    string model_name = 5;
    string model_run_vertex_id = 6;
  }
}

// Dataset Related
enum VersionStatusEnum {
  Current = 0;
  Expired = 1;
  Unresolved = 2;
}

message TemporalInfoType {
  string extent = 1;
  string fidelity = 2;
  // TODO: refactor later with mapping
  string other = 3;
}

message SpatialInfoType {
  string extent = 1;
  string fidelity = 2;
  // TODO: Refactor later with mapping
  string other = 3;
}

message SourceCodeType {
  string location = 1;
  string branch = 2;
  string tag = 3;
  string image = 4;
}

// enum DatasetTypeEnum {
//   Files = 0;
//   Images = 1;
//   Tables = 2;
//   Views = 4;
//   Streams = 5;
//   Documents = 6;
//   Graphs = 7;
//   CustomType = 100;
// }

// enum DataSystemEnum {
//   ESIFRepoAPI = 0;
//   OEDI = 1;
//   DOEDataFoundary = 2;
//   Eagle = 3;
//   Globus = 4;
//   NetworkDrive = 5;
//   AmazonS3 = 6;
//   AzureBlob = 7;
//   GoogleCloudStorage = 8;
//   Trino = 9;
//   PostgreSQL = 10;
//   MySQL = 11;
//   MongoDB = 12;
//   DocumentDB = 13;
//   Neptune = 14;
//   Neo4j = 15;
//   CustomSystem = 100;
// }

message DatasetLocationType {
  // TODO: Refactor system by using enum
  string system = 1;
  string path = 2;
  string description = 3;
  // TODO: Refactor later with mapping
  string extras = 4;
}

message DatasetType {
  string name = 1;
  // TODO: Refactor type by using enum
  string type = 2;
  string version = 3;
  // TODO: Refactor version_status by using enum
  string version_status = 4;
  string previous_version = 5;
  DatasetLocationType location = 6;
  string data_format = 7;
  string schema_info = 8;
  UserType registration_author = 9;
  repeated int32 weather_years = 10;
  repeated int32 model_years = 11;
  repeated string units = 12;
  TemporalInfoType temporal_info = 13;
  SpatialInfoType spatial_info = 14;
  repeated string scenarios = 15;
  repeated string sensitivities = 16;
  string description = 17;
  SourceCodeType source_code = 18;
  repeated string relevant_links = 19;
  string comments = 20;
  string resource_url = 21;
  repeated string input_datasets = 22;
}

message CreateDatasetRequest {
  string project_name = 1;
  string project_run_name = 2;
  string active_model_name = 3;
  DatasetType dataset = 4;
}

message CreateDatasetResponse {
  string created = 1;
  string vertex_id = 2;
  string dataset_name = 3;
}


// Other
// message CreateProjectRunRequest{
//   ProjectRequest project = 1;
//   string project_run_name = 2;
// }


// message GetDatasetRequest{
//   ModelRunRequest model_run = 1;
//   string dataset_name = 2;
//   string vertex_id = 3;
// }


// message DatasetDetails{
//   string filesystem = 1;
//   string filepath = 2;
// }


// message CheckinDatasetRequest{
//   ModelRunRequest model_run = 1;
//   DatasetDetails details = 2;
// }


// message ModifyDatasetRequest{
//   ModelRunRequest model_run = 1;
//   string dataset_name = 2;
//   string vertex_id = 3;
//   DatasetDetails details = 4;
// }


// // Specific Responses
// message GetModelContactResponse{

// }


// message CheckinDatasetResponse{

// }


// message GetDatasetResponse{
//   string dataset_name = 1;
//   string vertex_id = 2;
// }


// message GetDatasetLineageResponse{

// }


// message ModifyDatasetResponse{

// }


// message GetProjectRunResponse{


// }
